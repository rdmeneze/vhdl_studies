--------------------------------------------------------------------------------
--                                                                            --
--               Application Assignment 4 Module 1 Course 2                   --
--                                                                            --
--------------------------------------------------------------------------------
--
-- @file AAC2M1P4solved.vhd
-- @brief Application Assignment 2-001 Majority Vote Code 
-- @version: 1.0 
-- Date of current revision:  @date [2018-08-13]  
-- Target FPGA: [Intel Altera MAX10] 
-- Tools used: [Quartus Prime 16.1] for editing and synthesis 
--             [Modeltech ModelSIM 10.4a Student Edition] for simulation 
--             [Quartus Prime 16.1]  for place and route if applied
--             
--  Functional Description:  This file contains the VHDL which describes the 
--               FPGA implementation of a Majority Vote Circuit. The inputs are  
--               signals A, B, C with one output Y that is true only if at  
--               least 2 of the inputs are true.
 
--  Hierarchy:  There is only one level in this simple design.
--  
--  Designed for: Coursera 
--                
--  Designed by:  @author Tim Scherr
--                University of Colorado
-- 
--      Copyright (c) 2018 by Tim Scherr
--
-- Redistribution, modification or use of this software in source or binary
-- forms is permitted as long as the files maintain this copyright. Users are
-- permitted to modify this and use it to learn about the field of HDl code.
-- Tim Scherr and the University of Colorado are not liable for any misuse
-- of this material.
------------------------------------------------------------------------------
-- 

library ieee;                                	
use ieee.std_logic_1164.all;           	
                                             		
entity Majority is port (                 	
    A, B, C: in std_logic; 			
    Y: out std_logic);            		
end Majority;                   	

architecture behavioral of Majority is
--    type t_array_int is array (integer range<>) of integer;
    signal input_value : std_logic_vector (2 downto 0);
begin 

  input_value(0)  <= A;
  input_value(1)  <= B;
  input_value(2)  <= C;

  with input_value select 
    Y <=  '0'  when "000" , 
	  '0'  when "001" , 
	  '0'  when "010" , 
	  '0'  when "100" ,
          '1'  when others ;
       

  -- process(A, B, C)
    -- variable one_count : integer; 

  -- begin
        -- if(A = '1') then 
	    -- input_array(2) <= 1 ;
	-- else 
            -- input_array(2) <= 0 ;
	-- end if; 

        -- if(B = '1') then 
	    -- input_array(1) <= 1 ;
	-- else 
            -- input_array(1) <= 0 ;
	-- end if; 

        -- if(C = '1') then 
	    -- input_array(0) <= 1 ;
	-- else 
            -- input_array(0) <= 0 ;
	-- end if; 

        -- one_count := 0;

        -- for i in 2 downto 0 loop 
            -- if input_array(i) = 1 then
                -- one_count := one_count + 1;
            -- end if; 
        -- end loop;
	
        -- if one_count > 1 then
            -- Y <= '1'; 
        -- else
            -- Y <= '0'; 
        -- end if;

  -- end process; 
end behavioral;
